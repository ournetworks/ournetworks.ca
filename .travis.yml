language: ruby
rvm:
  - 2.6.0

before_install:
  # Here, we decrypt a passwordless ssh key for acting as a user on the server named "travis"
  # See: https://docs.travis-ci.com/user/encrypting-files/#Automated-Encryption
  - if [ "$TRAVIS_SECURE_ENV_VARS" == true ]; then openssl aes-256-cbc -K $encrypted_a3d58fa41b45_key -iv $encrypted_a3d58fa41b45_iv -in scripts/id_rsa.enc -out scripts/id_rsa -d; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == true ]; then chmod 400 scripts/id_rsa; fi
  # Bundler 2.0 support
  # See: https://docs.travis-ci.com/user/languages/ruby/#bundler-20
  - gem update --system
  - gem install bundler
  # Install NVM with Dat via npm
  - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash
  - nvm install 10.16.0
  - npm i -g dat

before_script:
  # Build Jekyll site
  - bundle exec jekyll build

addons:
  apt:
    packages:
    - libcurl4-openssl-dev

env:
  global:
  - NOKOGIRI_USE_SYSTEM_LIBRARIES=true
  - secure: aibwG/rj/c95IXvkol9CCdmWlIllwfZWsXg0omwdH9TQc1SC2bGrO6Qm7EY6ER1bDL5Y84K6wW9UIcvWifnuLqaEUUkCb5TQS8j0tPgNlZepxgptj6XNdi8aD99VE/HUQvTjGJoPaYetQ4hcxVUeMhdqjcR6CGK0Uu+Jj9Rb9bPUS/mIpuwfkMJ0Rpi7p7O5UZCo+yQA3qMVKTCJdLFrMJCxXMONvOHxXyd3nGaPoHFIVA6lp5jz+RSJhtPuG7tfyfG7t2yDsh3Jlod8IGCxg0mCsDWW/OJKO8oddjiZ7VHgj28TlfRpBFU27mv2Xd7zapAZWbgB7Rc/ElN/L8BF2gEAfO08ub0/jqUUlCDtOXEGDbfXmu/LUMGbcvLaSZYzlX4ITcUemRTibzNhcGWN3KaoZKLVqV3WLsodx8pJtfDpRMXF/RWOhYs9dUcPq5ImQ6mKC2x97ItEVMXRUlCEBWrQ3XBafOHSJmDFXk0GG10k7r8PY05mkv4d2886JYHv6ZmspnorlWG5H/aHG1P5ffv7UXiLAlXR13Hjuy10x3nUfaOUTaOIryzP0zdhT6dOBt2ikS+Bo7lkeKw42qPsGf6HZUntQXMEtBO+cMsLl6Y0o4SP4+4im7P/lp3Y2vpKkIMuFnpJUAyWzL0eY4iPnG3mZrE2xDi8dGpE1W4TThs=

cache: bundler

script: travis_retry bundle exec htmlproofer --check-html --allow-hash-href --internal_domains "/www.ournetworks.ca/,/ournetworks.ca/" ./_site

deploy:
  # Cleanup removes keys and build artefacts.
  # See: https://docs.travis-ci.com/user/deployment/#Uploading-Files-and-skip_cleanup
  skip_cleanup: true
  provider: script
  script: bash scripts/deploy.sh travis scripts/id_rsa ournetworks.ca
  on:
    branch:
      - master

after_deploy:
  # Clone/Initialize Dat archive
  - dat clone $(head -n 1 .well-known/dat) ./_site --exit
  # Build Jekyll site
  - bundle exec jekyll build
  - cd _site
  - echo $DATKEY | dat keys import
  - travis_wait 1 dat sync &> /dev/null || travis_terminate 0

notifications:
  email:
    recipients:
      - orga@ournetworks.ca
    on_success: change
    on_failure: change
